Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df_activity_score = df_active.nlargest(40, "activity")

fig = px.bar(
    df_activity_score,
    x=df_activity_score["activity"],
    y=df_activity_score["project_name"],
    orientation="h",
    custom_data=["oneliner","topic","git_url"],
    color = df_activity_score["development_distribution_score"],
    color_continuous_scale=color_continuous_scale,
    range_x=(2.8, 3.6)
)

fig.update_layout(
    height=1000,  # Added parameter
    width=900,
    xaxis_title="Activity Score",
    yaxis_title=None,
    title="Top 40 Activity Score",
    coloraxis_colorbar=dict(
    title="DDS",
    ),   
    hoverlabel=dict(
    bgcolor="white",
    dragmode=False,
)
)
fig.update(layout_showlegend=False)
fig['layout'].update(margin=dict(l=200,r=0,b=0,t=40))

fig.add_layout_image(
    dict(
        source=logo_img,
        xref="paper", yref="paper",
        x=1, y=0,
        sizex=0.05, sizey=0.05,
        xanchor="right", yanchor="bottom"
    )
)

fig.update_traces(
    hovertemplate="<br>".join([
        "Project Info: <b>%{customdata[0]}</b>",
        "Topic: <b>%{customdata[1]}</b>",
        "Git URL: <b>%{customdata[2]}</b>"
    ])
)
fig['layout']['yaxis']['autorange'] = "reversed"
fig.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[4], line 14[0m
[1;32m      1[0m df_activity_score [38;5;241m=[39m df_active[38;5;241m.[39mnlargest([38;5;241m40[39m, [38;5;124m"[39m[38;5;124mactivity[39m[38;5;124m"[39m)
[1;32m      3[0m fig [38;5;241m=[39m px[38;5;241m.[39mbar(
[1;32m      4[0m     df_activity_score,
[1;32m      5[0m     x[38;5;241m=[39mdf_activity_score[[38;5;124m"[39m[38;5;124mactivity[39m[38;5;124m"[39m],
[0;32m   (...)[0m
[1;32m     11[0m     range_x[38;5;241m=[39m([38;5;241m2.8[39m, [38;5;241m3.6[39m)
[1;32m     12[0m )
[0;32m---> 14[0m [43mfig[49m[38;5;241;43m.[39;49m[43mupdate_layout[49m[43m([49m
[1;32m     15[0m [43m    [49m[43mheight[49m[38;5;241;43m=[39;49m[38;5;241;43m1000[39;49m[43m,[49m[43m  [49m[38;5;66;43;03m# Added parameter[39;49;00m
[1;32m     16[0m [43m    [49m[43mwidth[49m[38;5;241;43m=[39;49m[38;5;241;43m900[39;49m[43m,[49m
[1;32m     17[0m [43m    [49m[43mxaxis_title[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mActivity Score[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     18[0m [43m    [49m[43myaxis_title[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[1;32m     19[0m [43m    [49m[43mtitle[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mTop 40 Activity Score[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     20[0m [43m    [49m[43mcoloraxis_colorbar[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m
[1;32m     21[0m [43m    [49m[43mtitle[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mDDS[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     22[0m [43m    [49m[43m)[49m[43m,[49m[43m   [49m
[1;32m     23[0m [43m    [49m[43mhoverlabel[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m
[1;32m     24[0m [43m    [49m[43mbgcolor[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mwhite[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     25[0m [43m    [49m[43mdragmode[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m     26[0m [43m)[49m
[1;32m     27[0m [43m)[49m
[1;32m     28[0m fig[38;5;241m.[39mupdate(layout_showlegend[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m     29[0m fig[[38;5;124m'[39m[38;5;124mlayout[39m[38;5;124m'[39m][38;5;241m.[39mupdate(margin[38;5;241m=[39m[38;5;28mdict[39m(l[38;5;241m=[39m[38;5;241m200[39m,r[38;5;241m=[39m[38;5;241m0[39m,b[38;5;241m=[39m[38;5;241m0[39m,t[38;5;241m=[39m[38;5;241m40[39m))

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/plotly/graph_objs/_figure.py:762[0m, in [0;36mFigure.update_layout[0;34m(self, dict1, overwrite, **kwargs)[0m
[1;32m    736[0m [38;5;28;01mdef[39;00m [38;5;21mupdate_layout[39m([38;5;28mself[39m, dict1[38;5;241m=[39m[38;5;28;01mNone[39;00m, overwrite[38;5;241m=[39m[38;5;28;01mFalse[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs) [38;5;241m-[39m[38;5;241m>[39m [38;5;124m"[39m[38;5;124mFigure[39m[38;5;124m"[39m:
[1;32m    737[0m     [38;5;124;03m"""[39;00m
[1;32m    738[0m 
[1;32m    739[0m [38;5;124;03m    Update the properties of the figure's layout with a dict and/or with[39;00m
[0;32m   (...)[0m
[1;32m    760[0m 
[1;32m    761[0m [38;5;124;03m    """[39;00m
[0;32m--> 762[0m     [38;5;28;01mreturn[39;00m [38;5;28;43msuper[39;49m[43m([49m[43mFigure[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m[38;5;241;43m.[39;49m[43mupdate_layout[49m[43m([49m[43mdict1[49m[43m,[49m[43m [49m[43moverwrite[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/plotly/basedatatypes.py:1401[0m, in [0;36mBaseFigure.update_layout[0;34m(self, dict1, overwrite, **kwargs)[0m
[1;32m   1377[0m [38;5;28;01mdef[39;00m [38;5;21mupdate_layout[39m([38;5;28mself[39m, dict1[38;5;241m=[39m[38;5;28;01mNone[39;00m, overwrite[38;5;241m=[39m[38;5;28;01mFalse[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1378[0m     [38;5;124;03m"""[39;00m
[1;32m   1379[0m [38;5;124;03m    Update the properties of the figure's layout with a dict and/or with[39;00m
[1;32m   1380[0m [38;5;124;03m    keyword arguments.[39;00m
[0;32m   (...)[0m
[1;32m   1399[0m [38;5;124;03m        The Figure object that the update_layout method was called on[39;00m
[1;32m   1400[0m [38;5;124;03m    """[39;00m
[0;32m-> 1401[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlayout[49m[38;5;241;43m.[39;49m[43mupdate[49m[43m([49m[43mdict1[49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1402[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/plotly/basedatatypes.py:5122[0m, in [0;36mBasePlotlyType.update[0;34m(self, dict1, overwrite, **kwargs)[0m
[1;32m   5120[0m     [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39mbatch_update():
[1;32m   5121[0m         BaseFigure[38;5;241m.[39m_perform_update([38;5;28mself[39m, dict1, overwrite[38;5;241m=[39moverwrite)
[0;32m-> 5122[0m         [43mBaseFigure[49m[38;5;241;43m.[39;49m[43m_perform_update[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mkwargs[49m[43m,[49m[43m [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m[43m)[49m
[1;32m   5123[0m [38;5;28;01melse[39;00m:
[1;32m   5124[0m     BaseFigure[38;5;241m.[39m_perform_update([38;5;28mself[39m, dict1, overwrite[38;5;241m=[39moverwrite)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/plotly/basedatatypes.py:3908[0m, in [0;36mBaseFigure._perform_update[0;34m(plotly_obj, update_obj, overwrite)[0m
[1;32m   3902[0m validator [38;5;241m=[39m plotly_obj[38;5;241m.[39m_get_prop_validator(key)
[1;32m   3904[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(validator, CompoundValidator) [38;5;129;01mand[39;00m [38;5;28misinstance[39m(val, [38;5;28mdict[39m):
[1;32m   3905[0m 
[1;32m   3906[0m     [38;5;66;03m# Update compound objects recursively[39;00m
[1;32m   3907[0m     [38;5;66;03m# plotly_obj[key].update(val)[39;00m
[0;32m-> 3908[0m     [43mBaseFigure[49m[38;5;241;43m.[39;49m[43m_perform_update[49m[43m([49m[43mplotly_obj[49m[43m[[49m[43mkey[49m[43m][49m[43m,[49m[43m [49m[43mval[49m[43m)[49m
[1;32m   3909[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(validator, CompoundArrayValidator):
[1;32m   3910[0m     [38;5;28;01mif[39;00m plotly_obj[key]:
[1;32m   3911[0m         [38;5;66;03m# plotly_obj has an existing non-empty array for key[39;00m
[1;32m   3912[0m         [38;5;66;03m# In this case we merge val into the existing elements[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/plotly/basedatatypes.py:3885[0m, in [0;36mBaseFigure._perform_update[0;34m(plotly_obj, update_obj, overwrite)[0m
[1;32m   3881[0m                 [38;5;28;01mcontinue[39;00m
[1;32m   3882[0m         [38;5;66;03m# If no match, raise the error, which should already[39;00m
[1;32m   3883[0m         [38;5;66;03m# contain the _raise_on_invalid_property_error[39;00m
[1;32m   3884[0m         [38;5;66;03m# generated message[39;00m
[0;32m-> 3885[0m         [38;5;28;01mraise[39;00m err
[1;32m   3887[0m [38;5;66;03m# Convert update_obj to dict[39;00m
[1;32m   3888[0m [38;5;66;03m# --------------------------[39;00m
[1;32m   3889[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(update_obj, BasePlotlyType):

[0;31mValueError[0m: Invalid property specified for object of type plotly.graph_objs.layout.Hoverlabel: 'dragmode'

Did you mean "align"?

    Valid properties:
        align
            Sets the horizontal alignment of the text content
            within hover label box. Has an effect only if the hover
            label text spans more two or more lines
        bgcolor
            Sets the background color of all hover labels on graph
        bordercolor
            Sets the border color of all hover labels on graph.
        font
            Sets the default hover label font used by all traces on
            the graph.
        grouptitlefont
            Sets the font for group titles in hover (unified
            modes). Defaults to `hoverlabel.font`.
        namelength
            Sets the default length (in number of characters) of
            the trace name in the hover labels for all traces. -1
            shows the whole name regardless of length. 0-3 shows
            the first 0-3 characters, and an integer >3 will show
            the whole name if it is less than that many characters,
            but if it is longer, will truncate to `namelength - 3`
            characters and add an ellipsis.
        
Did you mean "align"?

Bad property path:
dragmode
^^^^^^^^
ValueError: Invalid property specified for object of type plotly.graph_objs.layout.Hoverlabel: 'dragmode'

Did you mean "align"?

    Valid properties:
        align
            Sets the horizontal alignment of the text content
            within hover label box. Has an effect only if the hover
            label text spans more two or more lines
        bgcolor
            Sets the background color of all hover labels on graph
        bordercolor
            Sets the border color of all hover labels on graph.
        font
            Sets the default hover label font used by all traces on
            the graph.
        grouptitlefont
            Sets the font for group titles in hover (unified
            modes). Defaults to `hoverlabel.font`.
        namelength
            Sets the default length (in number of characters) of
            the trace name in the hover labels for all traces. -1
            shows the whole name regardless of length. 0-3 shows
            the first 0-3 characters, and an integer >3 will show
            the whole name if it is less than that many characters,
            but if it is longer, will truncate to `namelength - 3`
            characters and add an ellipsis.
        
Did you mean "align"?

Bad property path:
dragmode
^^^^^^^^

