Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
topic_his = (
    df_active["topic"]
    .value_counts()
    .to_frame()
    .rename_axis("topic_names")
    .reset_index()
)

fig = px.bar(
    topic_his,
    x="topic",
    y="topic_names",
    orientation="h",
)

fig.update_layout(
    height=1000,  # Added parameter
    #width=700,
    yaxis_title=None,
    xaxis_title="Projects",
    title="Projects within topics",
    coloraxis_colorbar=dict(
        title="DDS",
        orientation='h',
        y=-0.15,
        x=0.4
    ),
    hoverlabel=dict(bgcolor="white"),
    dragmode=False,
)
fig["layout"].update(margin=dict(l=0, r=0, b=0, t=100))
fig.update_traces(marker_color=marker_color)
fig.update(layout_showlegend=False)
fig.add_layout_image(
    dict(
        source=logo_img,
        xref="paper",
        yref="paper",
        x=1,
        y=0,
        sizex=0.06,
        sizey=0.06,
        xanchor="right",
        yanchor="bottom",
    )
)
fig["layout"]["yaxis"]["autorange"] = "reversed"
fig.show(responsive=True)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[4], line 9[0m
[1;32m      1[0m topic_his [38;5;241m=[39m (
[1;32m      2[0m     df_active[[38;5;124m"[39m[38;5;124mtopic[39m[38;5;124m"[39m]
[1;32m      3[0m     [38;5;241m.[39mvalue_counts()
[0;32m   (...)[0m
[1;32m      6[0m     [38;5;241m.[39mreset_index()
[1;32m      7[0m )
[0;32m----> 9[0m fig [38;5;241m=[39m [43mpx[49m[38;5;241;43m.[39;49m[43mbar[49m[43m([49m
[1;32m     10[0m [43m    [49m[43mtopic_his[49m[43m,[49m
[1;32m     11[0m [43m    [49m[43mx[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mtopic[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     12[0m [43m    [49m[43my[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mtopic_names[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     13[0m [43m    [49m[43morientation[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mh[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m     14[0m [43m)[49m
[1;32m     16[0m fig[38;5;241m.[39mupdate_layout(
[1;32m     17[0m     height[38;5;241m=[39m[38;5;241m1000[39m,  [38;5;66;03m# Added parameter[39;00m
[1;32m     18[0m     [38;5;66;03m#width=700,[39;00m
[0;32m   (...)[0m
[1;32m     29[0m     dragmode[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m     30[0m )
[1;32m     31[0m fig[[38;5;124m"[39m[38;5;124mlayout[39m[38;5;124m"[39m][38;5;241m.[39mupdate(margin[38;5;241m=[39m[38;5;28mdict[39m(l[38;5;241m=[39m[38;5;241m0[39m, r[38;5;241m=[39m[38;5;241m0[39m, b[38;5;241m=[39m[38;5;241m0[39m, t[38;5;241m=[39m[38;5;241m100[39m))

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/plotly/express/_chart_types.py:373[0m, in [0;36mbar[0;34m(data_frame, x, y, color, pattern_shape, facet_row, facet_col, facet_col_wrap, facet_row_spacing, facet_col_spacing, hover_name, hover_data, custom_data, text, base, error_x, error_x_minus, error_y, error_y_minus, animation_frame, animation_group, category_orders, labels, color_discrete_sequence, color_discrete_map, color_continuous_scale, pattern_shape_sequence, pattern_shape_map, range_color, color_continuous_midpoint, opacity, orientation, barmode, log_x, log_y, range_x, range_y, text_auto, title, template, width, height)[0m
[1;32m    325[0m [38;5;28;01mdef[39;00m [38;5;21mbar[39m(
[1;32m    326[0m     data_frame[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    327[0m     x[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m    367[0m     height[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    368[0m ) [38;5;241m-[39m[38;5;241m>[39m go[38;5;241m.[39mFigure:
[1;32m    369[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m    370[0m [38;5;124;03m    In a bar plot, each row of `data_frame` is represented as a rectangular[39;00m
[1;32m    371[0m [38;5;124;03m    mark.[39;00m
[1;32m    372[0m [38;5;124;03m    """[39;00m
[0;32m--> 373[0m     [38;5;28;01mreturn[39;00m [43mmake_figure[49m[43m([49m
[1;32m    374[0m [43m        [49m[43margs[49m[38;5;241;43m=[39;49m[38;5;28;43mlocals[39;49m[43m([49m[43m)[49m[43m,[49m
[1;32m    375[0m [43m        [49m[43mconstructor[49m[38;5;241;43m=[39;49m[43mgo[49m[38;5;241;43m.[39;49m[43mBar[49m[43m,[49m
[1;32m    376[0m [43m        [49m[43mtrace_patch[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m[43mtextposition[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mauto[39;49m[38;5;124;43m"[39;49m[43m)[49m[43m,[49m
[1;32m    377[0m [43m        [49m[43mlayout_patch[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m[43mbarmode[49m[38;5;241;43m=[39;49m[43mbarmode[49m[43m)[49m[43m,[49m
[1;32m    378[0m [43m    [49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/plotly/express/_core.py:1996[0m, in [0;36mmake_figure[0;34m(args, constructor, trace_patch, layout_patch)[0m
[1;32m   1993[0m layout_patch [38;5;241m=[39m layout_patch [38;5;129;01mor[39;00m {}
[1;32m   1994[0m apply_default_cascade(args)
[0;32m-> 1996[0m args [38;5;241m=[39m [43mbuild_dataframe[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mconstructor[49m[43m)[49m
[1;32m   1997[0m [38;5;28;01mif[39;00m constructor [38;5;129;01min[39;00m [go[38;5;241m.[39mTreemap, go[38;5;241m.[39mSunburst, go[38;5;241m.[39mIcicle] [38;5;129;01mand[39;00m args[[38;5;124m"[39m[38;5;124mpath[39m[38;5;124m"[39m] [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1998[0m     args [38;5;241m=[39m process_dataframe_hierarchy(args)

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/plotly/express/_core.py:1409[0m, in [0;36mbuild_dataframe[0;34m(args, constructor)[0m
[1;32m   1406[0m     args[[38;5;124m"[39m[38;5;124mcolor[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m   1407[0m [38;5;66;03m# now that things have been prepped, we do the systematic rewriting of `args`[39;00m
[0;32m-> 1409[0m df_output, wide_id_vars [38;5;241m=[39m [43mprocess_args_into_dataframe[49m[43m([49m
[1;32m   1410[0m [43m    [49m[43margs[49m[43m,[49m[43m [49m[43mwide_mode[49m[43m,[49m[43m [49m[43mvar_name[49m[43m,[49m[43m [49m[43mvalue_name[49m
[1;32m   1411[0m [43m[49m[43m)[49m
[1;32m   1413[0m [38;5;66;03m# now that `df_output` exists and `args` contains only references, we complete[39;00m
[1;32m   1414[0m [38;5;66;03m# the special-case and wide-mode handling by further rewriting args and/or mutating[39;00m
[1;32m   1415[0m [38;5;66;03m# df_output[39;00m
[1;32m   1417[0m count_name [38;5;241m=[39m _escape_col_name(df_output, [38;5;124m"[39m[38;5;124mcount[39m[38;5;124m"[39m, [var_name, value_name])

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/plotly/express/_core.py:1208[0m, in [0;36mprocess_args_into_dataframe[0;34m(args, wide_mode, var_name, value_name)[0m
[1;32m   1206[0m         [38;5;28;01mif[39;00m argument [38;5;241m==[39m [38;5;124m"[39m[38;5;124mindex[39m[38;5;124m"[39m:
[1;32m   1207[0m             err_msg [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m To use the index, pass it in directly as `df.index`.[39m[38;5;124m"[39m
[0;32m-> 1208[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(err_msg)
[1;32m   1209[0m [38;5;28;01melif[39;00m length [38;5;129;01mand[39;00m [38;5;28mlen[39m(df_input[argument]) [38;5;241m!=[39m length:
[1;32m   1210[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1211[0m         [38;5;124m"[39m[38;5;124mAll arguments should have the same length. [39m[38;5;124m"[39m
[1;32m   1212[0m         [38;5;124m"[39m[38;5;124mThe length of column argument `df[[39m[38;5;132;01m%s[39;00m[38;5;124m]` is [39m[38;5;132;01m%d[39;00m[38;5;124m, whereas the [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m   1219[0m         )
[1;32m   1220[0m     )

[0;31mValueError[0m: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['topic_names', 'count'] but received: topic
ValueError: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['topic_names', 'count'] but received: topic

